-- Create the Departments table
CREATE TABLE IF NOT EXISTS Departments (
    DepartmentID INTEGER PRIMARY KEY AUTOINCREMENT,
    DepartmentName VARCHAR(50) NOT NULL
);

-- Create the Employees table
CREATE TABLE IF NOT EXISTS Employees (
    EmployeeID INTEGER PRIMARY KEY AUTOINCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    DepartmentID INTEGER,
    Salary DECIMAL(10, 2),
    HireDate DATE
);

-- Insert sample data into the Departments table
INSERT INTO Departments (DepartmentName)
VALUES
    ('HR'),
    ('Finance'),
    ('IT'),
    ('Marketing');

-- Insert sample data into the Employees table
INSERT INTO Employees (FirstName, LastName, DepartmentID, Salary, HireDate)
VALUES
    ('John', 'Doe', 1, 60000.00, '2023-01-15'),
    ('Jane', 'Smith', 2, 75000.00, '2023-02-20'),
    ('Michael', 'Johnson', 3, 80000.00, '2023-03-10'),
    ('Emily', 'Williams', 1, 55000.00, '2023-04-05'),
    ('David', 'Brown', 4, 70000.00, '2023-05-12');

WITH avgsalaries AS (
    SELECT d.DepartmentID,d.DepartmentName, 
    AVG(e.Salary) AS AVGDeptSalary
    FROM Departments d 
    INNER JOIN Employees e ON d.DepartmentID = e.DepartmentID
    GROUP BY d.DepartmentID, d.DepartmentName
)
SELECT DISTINCT a.DepartmentID, a.DepartmentName, a.AVGDeptSalary,
e2.FirstName, e2.LastName, e2.Salary,
CASE
WHEN e2.Salary > a.AVGDeptSalary THEN 'Above Average'
ELSE 'Below or Equal to Average' 
END AS Status
FROM avgsalaries a
INNER JOIN Employees e2 ON a.DepartmentID = e2.DepartmentID
ORDER BY a.DepartmentID;

SELECT
e.EmployeeID,
e.FirstName,
e.LastName,
e.Salary,
d.DepartmentName
FROM Employees e
INNER JOIN Departments d ON e.DepartmentID = d.DepartmentID
WHERE e.Salary = (
    SELECT MAX(Salary)
    FROM Employees
    WHERE DepartmentID = e.DepartmentID
) 
AND d.DepartmentName IS NOT 'IT'